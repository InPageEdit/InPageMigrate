{"version":3,"sources":["webpack://mediawiki-inpagemigrate/./module/getContent.js","webpack://mediawiki-inpagemigrate/./module/getPageData.js","webpack://mediawiki-inpagemigrate/./module/init.js","webpack://mediawiki-inpagemigrate/./module/jsonp.js","webpack://mediawiki-inpagemigrate/./module/pageExist.js","webpack://mediawiki-inpagemigrate/./module/postContent.js","webpack://mediawiki-inpagemigrate/./module/resolvePage.js","webpack://mediawiki-inpagemigrate/webpack/bootstrap","webpack://mediawiki-inpagemigrate/./index.js"],"names":["module","exports","async","url","page","jsonp","data","format","action","prop","console","info","getPageData","resolvePage","fromUrl","window","InPageMigrateFrom","wgPageName","mw","config","get","$mwContent","$","$form","class","appendTo","$pageName","value","$startBtn","text","$postButton","disabled","$detailArea","$progressArea","pushProgress","str","now","Date","prepend","append","getHours","getMinutes","getSeconds","style","click","attr","val","pageData","error","parse","JSON","stringify","each","templates","_","item","pageList","exists","push","neededPages","join","length","loopResolve","i","from","to","href","util","getUrl","ajax","dataType","pageid","title","post","token","user","tokens","summary","getContent","pageExist","postContent","$def","Deferred","$yes","$no","$confirmBtn","hide","doEdit","resolve","wikitext","ret","errors","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","init","loader","using","wgArticleId","wgAction","wgRelevantPageIsProbablyEditable","isAnon"],"mappings":"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","file":"InPageMigrate.min.js","sourcesContent":["module.exports = async (url, page) => {\r\n  const jsonp = require('./jsonp')\r\n  var data = await jsonp(url, {\r\n    format: 'json',\r\n    action: 'parse',\r\n    page,\r\n    prop: 'wikitext'\r\n  })\r\n  console.info('PageData', page, data)\r\n  return data\r\n}","module.exports = async (url, page) => {\r\n  const jsonp = require('./jsonp')\r\n  var data = await jsonp(url, {\r\n    format: 'json',\r\n    action: 'parse',\r\n    page,\r\n    prop: 'templates'\r\n  })\r\n  return data\r\n}","const getPageData = require('./getPageData')\r\nconst resolvePage = require('./resolvePage')\r\n\r\nmodule.exports = () => {\r\n\r\n  // 所需的常量\r\n  const fromUrl = window.InPageMigrateFrom\r\n  const { wgPageName } = mw.config.get()\r\n\r\n  // 获取 dom\r\n  var $mwContent = $('#mw-content-text')\r\n\r\n  // 构建 jQuery 对象\r\n  var $form = $('<div>', { class: 'InPageMigrate ipm-all' })\r\n  $form.appendTo($mwContent)\r\n\r\n  var $pageName = $('<input>', { class: 'ipm-pageName', value: wgPageName }),\r\n    $startBtn = $('<button>', { class: 'ipm-startBtn', text: '获取信息' }),\r\n    $postButton = $('<button>', { class: 'ipm-startBtn', text: '确认迁移', disabled: true }),\r\n    $detailArea = $('<section>', { class: 'ipm-detailArea', text: '操作日志' }),\r\n    $progressArea = $('<ul>', { class: 'ipm-progressArea' })\r\n\r\n  $form.append(\r\n    $('<h3>', { text: '快速迁移页面' }),\r\n    $('<p>', { text: '您正在从 API 接口为 ' + fromUrl + ' 的 wiki 迁移内容。' }),\r\n    $('<label>', { style: 'display: block' }).append(\r\n      '迁移：',\r\n      $pageName,\r\n      ' → ',\r\n      $('<i>', { text: wgPageName })\r\n    ),\r\n    $('<div>', { class: 'ipm-container' }).append(\r\n      $('<div>', { class: 'ipm-buttonArea' }).append(\r\n        $startBtn,\r\n        $postButton,\r\n      ),\r\n      $detailArea.append(\r\n        $progressArea\r\n      )\r\n    )\r\n  )\r\n\r\n  // @function pushProgress\r\n  function pushProgress(str) {\r\n    var now = new Date()\r\n    $progressArea.prepend(\r\n      $('<li>').append(\r\n        `[${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}] `,\r\n        str\r\n      )\r\n    )\r\n  }\r\n\r\n  // 获取信息\r\n  $startBtn.click(async function () {\r\n    // 初始化\r\n    $startBtn.attr('disabled', 'disabled')\r\n    $postButton.attr('disabled', 'disabled')\r\n    $form.data('pageList', [])\r\n    pushProgress('【等待】正在获取源页面(' + $pageName.val() + ')的基础信息……')\r\n\r\n    // 获取信息\r\n    const pageData = await getPageData(fromUrl, $pageName.val())\r\n\r\n    // 遇到错误\r\n    if (pageData.error || !pageData.parse) {\r\n      pushProgress('【错误】遇到以下问题：' + JSON.stringify(pageData))\r\n      $startBtn.attr('disabled', false).text('重试')\r\n      return\r\n    }\r\n\r\n    var { parse } = pageData\r\n\r\n    // 获取所需页面列表\r\n    $form.data('pageList', [$pageName.val()])\r\n    $.each(parse.templates, (_, item) => {\r\n      var pageList = $form.data('pageList')\r\n      if (item.exists === '') pageList.push(item['*'])\r\n      $form.data('pageList', pageList)\r\n    })\r\n\r\n    // 缓存所需页面\r\n    var neededPages = $form.data('pageList')\r\n\r\n    // 展示所需页面\r\n    pushProgress('【信息】成功获取页面信息，需要迁移以下页面：' + neededPages.join('、') + ' (共计' + neededPages.length + '个页面)')\r\n    pushProgress('【确认】请确认是否开始迁移……')\r\n\r\n    $startBtn.attr('disabled', false)\r\n    $postButton.attr('disabled', false)\r\n  })\r\n\r\n  $postButton.click(function () {\r\n    var neededPages = $form.data('pageList')\r\n    if (!neededPages) {\r\n      pushProgress('【错误】找不到需要的页面列表，请重新获取页面信息。')\r\n      return\r\n    }\r\n\r\n    async function loopResolve(i) {\r\n      var from = neededPages[i],\r\n        to = neededPages[i]\r\n      if (i === 0) to = wgPageName\r\n      pushProgress(`【信息】正在从 ${from} 迁移页面到 ${to} (${i + 1}/${neededPages.length})`)\r\n      await resolvePage(fromUrl, from, to, pushProgress)\r\n      if (i < (neededPages.length - 1)) {\r\n        loopResolve(i + 1)\r\n      } else {\r\n        pushProgress('【完成】页面迁移已完成，请刷新页面后检查。')\r\n        pushProgress(\r\n          $('<a>', { href: mw.util.getUrl(wgPageName, { action: 'purge' }), text: '立即刷新' })\r\n        )\r\n      }\r\n    }\r\n\r\n    loopResolve(0)\r\n\r\n  })\r\n}","module.exports = async (url, data = {}) => {\r\n  if (!url) return false\r\n  return $.ajax({\r\n    dataType: 'jsonp',\r\n    url,\r\n    data\r\n  })\r\n}","module.exports = async (page) => {\r\n  var data = await $.get(mw.config.get('wgScriptPath') + '/api.php', {\r\n    format: 'json',\r\n    action: 'parse',\r\n    prop: '',\r\n    page\r\n  })\r\n\r\n  if (data.error || !data.parse || data.parse.pageid === 0) return false\r\n  return true\r\n}","module.exports = (title, text) => {\r\n  return $.post(mw.config.get('wgScriptPath') + '/api.php', {\r\n    format: 'json',\r\n    action: 'edit',\r\n    token: mw.user.tokens.get('editToken'),\r\n    title,\r\n    text,\r\n    summary: '[InPageMigrate] 自动导入页面'\r\n  })\r\n}","const getContent = require('./getContent')\r\nconst pageExist = require('./pageExist')\r\nconst postContent = require('./postContent')\r\n\r\nmodule.exports = async (url, from, to, pushProgress) => {\r\n\r\n  var $def = $.Deferred()\r\n\r\n  var exist = await pageExist(to)\r\n\r\n  if (exist) {\r\n    var $yes = $('<a>', { class: 'ipm-existPageYes', text: '是', href: 'javascript:;' }),\r\n      $no = $('<a>', { class: 'ipm-existPageYes', text: '否', href: 'javascript:;' }),\r\n      $confirmBtn = $('<span>').append($yes, '/', $no)\r\n\r\n    $yes.click(function () {\r\n      $confirmBtn.hide()\r\n      doEdit()\r\n    })\r\n\r\n    $no.click(function () {\r\n      $confirmBtn.hide()\r\n      pushProgress('【信息】已跳过页面 ' + to)\r\n      $def.resolve()\r\n    })\r\n\r\n    pushProgress(\r\n      $('<span>').append(\r\n        '【警告】页面 <strong>' + to + '</strong> 已存在于本 wiki，是否覆盖？',\r\n        $confirmBtn\r\n      )\r\n    )\r\n  } else {\r\n    doEdit()\r\n  }\r\n\r\n  async function doEdit() {\r\n\r\n    var pageContent = await getContent(url, from)\r\n\r\n    var wikitext = pageContent.parse.wikitext\r\n\r\n    var ret = await postContent(to, wikitext['*'])\r\n\r\n    if (ret.error || ret.errors) {\r\n      pushProgress('【错误】保存页面 ' + to + '时出错。')\r\n      $def.resolve()\r\n    }\r\n    pushProgress('【成功】已从 ' + from + ' 保存内容到 ' + to)\r\n    $def.resolve()\r\n  }\r\n\r\n  return $def\r\n\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const init = require(\"./module/init\")\r\n\r\n!(async () => {\r\n\r\n  await mw.loader.using(['mediawiki.api', 'mediawiki.util', 'mediawiki.user'])\r\n\r\n  // 所需的常量\r\n  const { wgArticleId, wgAction, wgRelevantPageIsProbablyEditable } = mw.config.get()\r\n\r\n  // 如果不符合条件则直接结束\r\n  if (!window.InPageMigrateFrom) {\r\n    console.info('[InPageMigrate]', 'Please set API via window.InPageMigrateFrom')\r\n    return\r\n  }\r\n  if (mw.user.isAnon()) return // 未登录\r\n  if (wgAction !== 'view') return // 不是浏览状态\r\n  if (!wgRelevantPageIsProbablyEditable) return // 不可编辑\r\n  if (wgArticleId !== 0) return // 页面存在\r\n\r\n  // 走\r\n  init()\r\n\r\n})()"],"sourceRoot":""}